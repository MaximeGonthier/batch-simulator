Workloads: inputs/workloads/converted/test-easybf
Cluster: inputs/clusters/rackham_4nodes.txt
Scheduler: Fcfs_with_a_score_conservativebf_x1_x1_x0_x0
No constraint on sizes (0).
Id: 0 Memory: 128 Bandwidth: 0.100000 Available cores: 20
Id: 1 Memory: 128 Bandwidth: 0.100000 Available cores: 20
Id: 2 Memory: 256 Bandwidth: 0.100000 Available cores: 20
Id: 3 Memory: 1024 Bandwidth: 0.100000 Available cores: 20
Read workload done.
No jobs of category 0. First subtime day 0 is set to 0.

Scheduled job list after scheduling -2 jobs from history. Must be full.
After scheduling jobs of workload -2, the number of jobs to schedule at t = 0 is 0.
Start jobs before day 0 done.

Schedule job list after starting - 2. Must be less full.
Multiplier file to load: 1 / Multiplier file evicted: 1 / Multiplier nb of copy: 0 / Multiplier area bigger nodes: 0 / Adaptative multiplier : 0 / Penalty on sizes : 0 / Start immeditaly if EAT is t: 0.
busy_cluster_threshold is 100.
Start simulation.
We have new jobs at time 0.
New job 1.
New job 2.
New job 3.
New job 4.
New job 5.
New job 6.
New job 7.
New job 8.
New job 9.
New job 10.
New job 11.
New job 12.
New job 131.
New job 13.
New job 14.
New job 15.
New job 16.
New job 17.
reset_cores.
Reschedule.
Start fcfs with a score conservative bf at time 0.
There are 80/80 available cores.
Scheduling job 1.
Intervals at time 0 are:
Node 0:
Node 1:
Node 2:
Node 3:
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
Total size of data on node ending before my EAT is: 0.000000 but I return (0.750000*0.000000)/0.100000 = 0.000000.
C: Time to reload evicted files 0.000000.
Score for job 1 is 960 (EAT: 0 + TL 1*960.000000 + TRL 1*0.000000) with node 0.
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
Need to create a data and intervals for the node 0 data 1.
Job 1 using file 1 category 0 workload 1 will be computed on node 0 core(s) 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 0 and is predicted to finish at time 3600.
There are 65/80 available cores.
Scheduling job 2.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 )
Node 1:
Node 2:
Node 3:
A: EAT is 3600.
Data 1 is on node 0.
Interval not empty, but is it on the node at time 3600 ?
Checking 0 / 960 / 3600.
B: Time to load file: 0.000000. Is being loaded? 0.
Total size of data on node ending before my EAT is: 0.000000 but I return (0.750000*0.000000)/0.100000 = 0.000000.
C: Time to reload evicted files 0.000000.
Score for job 2 is 3600 (EAT: 3600 + TL 1*0.000000 + TRL 1*0.000000) with node 0.
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
Total size of data on node ending before my EAT is: 0.000000 but I return (0.750000*0.000000)/0.100000 = 0.000000.
C: Time to reload evicted files 0.000000.
Score for job 2 is 960 (EAT: 0 + TL 1*960.000000 + TRL 1*0.000000) with node 1.
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
Need to create a data and intervals for the node 1 data 1.
Job 2 using file 1 category 0 workload 1 will be computed on node 1 core(s) 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 0 and is predicted to finish at time 3600.
There are 50/80 available cores.
Scheduling job 3.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 )
Node 1: 1 ( 0 960 3600 )
Node 2:
Node 3:
A: EAT is 3600.
Data 1 is on node 0.
Interval not empty, but is it on the node at time 3600 ?
Checking 0 / 960 / 3600.
B: Time to load file: 0.000000. Is being loaded? 0.
Total size of data on node ending before my EAT is: 0.000000 but I return (0.750000*0.000000)/0.100000 = 0.000000.
C: Time to reload evicted files 0.000000.
Score for job 3 is 3600 (EAT: 3600 + TL 1*0.000000 + TRL 1*0.000000) with node 0.
A: EAT is 3600.
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
Total size of data on node ending before my EAT is: 0.000000 but I return (0.750000*0.000000)/0.100000 = 0.000000.
C: Time to reload evicted files 0.000000.
Score for job 3 is 960 (EAT: 0 + TL 1*960.000000 + TRL 1*0.000000) with node 2.
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
Need to create a data and intervals for the node 2 data 1.
Job 3 using file 1 category 0 workload 1 will be computed on node 2 core(s) 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 0 and is predicted to finish at time 3600.
There are 35/80 available cores.
Scheduling job 4.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 )
Node 1: 1 ( 0 960 3600 )
Node 2: 1 ( 0 960 3600 )
Node 3:
A: EAT is 3600.
Data 1 is on node 0.
Interval not empty, but is it on the node at time 3600 ?
Checking 0 / 960 / 3600.
B: Time to load file: 0.000000. Is being loaded? 0.
Total size of data on node ending before my EAT is: 0.000000 but I return (0.750000*0.000000)/0.100000 = 0.000000.
C: Time to reload evicted files 0.000000.
Score for job 4 is 3600 (EAT: 3600 + TL 1*0.000000 + TRL 1*0.000000) with node 0.
A: EAT is 3600.
A: EAT is 3600.
A: EAT is 0.
B: Time to load file: 960.000000. Is being loaded? 0.
Total size of data on node ending before my EAT is: 0.000000 but I return (0.750000*0.000000)/0.100000 = 0.000000.
C: Time to reload evicted files 0.000000.
Score for job 4 is 960 (EAT: 0 + TL 1*960.000000 + TRL 1*0.000000) with node 3.
Need to create a data and intervals for the node 3 data 1.
Job 4 using file 1 category 0 workload 1 will be computed on node 3 core(s) 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 0 and is predicted to finish at time 3600.
There are 20/80 available cores.
Scheduling job 5.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 )
Node 1: 1 ( 0 960 3600 )
Node 2: 1 ( 0 960 3600 )
Node 3: 1 ( 0 960 3600 )
A: EAT is 3600.
Data 1 is on node 0.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 5 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 0.
A: EAT is 3600.
Data 1 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 5 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 5 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 2.
A: EAT is 3600.
Data 1 is on node 3.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 5 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 3.
Need to create a data and intervals for the node 0 data 3.
Il va y avoir un trou sur node 0 core 15.
Il va y avoir un trou sur node 0 core 16.
Il va y avoir un trou sur node 0 core 17.
Il va y avoir un trou sur node 0 core 18.
Il va y avoir un trou sur node 0 core 19.
Job 5 using file 3 category 0 workload 1 will be computed on node 0 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 3600 and is predicted to finish at time 7200.
There are 20/80 available cores.
Scheduling job 6.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 )
Node 2: 1 ( 0 960 3600 )
Node 3: 1 ( 0 960 3600 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Interval not empty, but is it on the node at time 7200 ?
Checking 3600 / 4880 / 7200.
B: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 6 is 8160 (EAT: 7200 + TL 1*0.000000 + TRL 1*960.000000) with node 0.
A: EAT is 3600.
Data 1 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 6 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 6 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 2.
A: EAT is 3600.
Data 1 is on node 3.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 6 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 3.
Need to create a data and intervals for the node 1 data 3.
Il va y avoir un trou sur node 1 core 15.
Il va y avoir un trou sur node 1 core 16.
Il va y avoir un trou sur node 1 core 17.
Il va y avoir un trou sur node 1 core 18.
Il va y avoir un trou sur node 1 core 19.
Job 6 using file 3 category 0 workload 1 will be computed on node 1 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 3600 and is predicted to finish at time 7200.
There are 20/80 available cores.
Scheduling job 7.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 )
Node 3: 1 ( 0 960 3600 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Interval not empty, but is it on the node at time 7200 ?
Checking 3600 / 4880 / 7200.
B: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 7 is 8160 (EAT: 7200 + TL 1*0.000000 + TRL 1*960.000000) with node 0.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
Interval not empty, but is it on the node at time 7200 ?
Checking 3600 / 4880 / 7200.
B: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 7 is 8160 (EAT: 7200 + TL 1*0.000000 + TRL 1*960.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 7 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 2.
A: EAT is 3600.
Data 1 is on node 3.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 7 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 3.
Need to create a data and intervals for the node 2 data 3.
Il va y avoir un trou sur node 2 core 15.
Il va y avoir un trou sur node 2 core 16.
Il va y avoir un trou sur node 2 core 17.
Il va y avoir un trou sur node 2 core 18.
Il va y avoir un trou sur node 2 core 19.
Job 7 using file 3 category 0 workload 1 will be computed on node 2 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 3600 and is predicted to finish at time 7200.
There are 20/80 available cores.
Scheduling job 8.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.900000*224.000000)/0.100000 = 2015.999878.
C: Time to reload evicted files 2015.999878.
Score for job 8 is 10366 (EAT: 7200 + TL 1*1150.000000 + TRL 1*2015.999878) with node 0.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.900000*224.000000)/0.100000 = 2015.999878.
C: Time to reload evicted files 2015.999878.
Score for job 8 is 10366 (EAT: 7200 + TL 1*1150.000000 + TRL 1*2015.999878) with node 1.
A: EAT is 7200.
Data 1 is on node 2.
Data 3 is on node 2.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.900000*224.000000)/0.100000 = 2015.999878.
C: Time to reload evicted files 2015.999878.
Score for job 8 is 10366 (EAT: 7200 + TL 1*1150.000000 + TRL 1*2015.999878) with node 2.
A: EAT is 3600.
Data 1 is on node 3.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (0.900000*96.000000)/0.100000 = 863.999939.
C: Time to reload evicted files 863.999939.
Score for job 8 is 5614 (EAT: 3600 + TL 1*1150.000000 + TRL 1*863.999939) with node 3.
Need to create a data and intervals for the node 3 data 4.
Il va y avoir un trou sur node 3 core 15.
Il va y avoir un trou sur node 3 core 16.
Il va y avoir un trou sur node 3 core 17.
Il va y avoir un trou sur node 3 core 18.
Il va y avoir un trou sur node 3 core 19.
Job 8 using file 4 category 0 workload 1 will be computed on node 3 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12 start at time 3600 and is predicted to finish at time 7200.
There are 20/80 available cores.
Scheduling job 9.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 ) 4 ( 3600 4750 7200 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 9 is 7376 (EAT: 7200 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
Could fit in the hole of node 0.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 0.
Data 3 is on node 0.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 9 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
A: EAT is 7200.
Could fit in the hole of node 1.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 1.
Data 3 is on node 1.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 9 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 1.
A: EAT is 7200.
Could fit in the hole of node 2.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 2.
Data 3 is on node 2.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 9 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 2.
A: EAT is 3600.
Could fit in the hole of node 3.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 3.
Data 4 is on node 3.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 4: 7200->
Total size of data on node ending before my EAT is: 96.000000 but I return (0.050000*96.000000)/0.100000 = 48.000000.
C in hole: Time to reload evicted files 48.000000.
Score in hole for job 9 is 112 (EAT: 0 + TL 1*64.000000 + TRL 1*48.000000) with node 3.
Need to create a data and intervals for the node 3 data 5.
Backfilled job, using 1 cores, nb of cores in the hole was 5.
Holes after this backfill are:
Hole on node 0 core 15. Next job start at time 3600.
Hole on node 0 core 16. Next job start at time 3600.
Hole on node 0 core 17. Next job start at time 3600.
Hole on node 0 core 18. Next job start at time 3600.
Hole on node 0 core 19. Next job start at time 3600.
Hole on node 1 core 15. Next job start at time 3600.
Hole on node 1 core 16. Next job start at time 3600.
Hole on node 1 core 17. Next job start at time 3600.
Hole on node 1 core 18. Next job start at time 3600.
Hole on node 1 core 19. Next job start at time 3600.
Hole on node 2 core 15. Next job start at time 3600.
Hole on node 2 core 16. Next job start at time 3600.
Hole on node 2 core 17. Next job start at time 3600.
Hole on node 2 core 18. Next job start at time 3600.
Hole on node 2 core 19. Next job start at time 3600.
Hole on node 3 core 16. Next job start at time 3600.
Hole on node 3 core 17. Next job start at time 3600.
Hole on node 3 core 18. Next job start at time 3600.
Hole on node 3 core 19. Next job start at time 3600.
Job 9 using file 5 category 0 workload 1 will be computed on node 3 core(s) 15 start at time 0 and is predicted to finish at time 3600.
There are 19/80 available cores.
Scheduling job 10.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 ) 4 ( 3600 4750 7200 ) 5 ( 0 64 3600 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 10 is 7376 (EAT: 7200 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
Could fit in the hole of node 0.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 0.
Data 3 is on node 0.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 10 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
A: EAT is 7200.
Could fit in the hole of node 1.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 1.
Data 3 is on node 1.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 10 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 1.
A: EAT is 7200.
Could fit in the hole of node 2.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 2.
Data 3 is on node 2.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 10 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 2.
A: EAT is 3600.
Could fit in the hole of node 3.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Interval not empty, but is it on the node at time 3600 ?
Checking 0 / 64 / 3600.
B in hole: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 4: 7200->
Total size of data on node ending before my EAT is: 96.000000 but I return (0.050000*96.000000)/0.100000 = 48.000000.
C in hole: Time to reload evicted files 48.000000.
Score in hole for job 10 is 48 (EAT: 0 + TL 1*0.000000 + TRL 1*48.000000) with node 3.
Backfilled job, using 1 cores, nb of cores in the hole was 4.
Holes after this backfill are:
Hole on node 0 core 15. Next job start at time 3600.
Hole on node 0 core 16. Next job start at time 3600.
Hole on node 0 core 17. Next job start at time 3600.
Hole on node 0 core 18. Next job start at time 3600.
Hole on node 0 core 19. Next job start at time 3600.
Hole on node 1 core 15. Next job start at time 3600.
Hole on node 1 core 16. Next job start at time 3600.
Hole on node 1 core 17. Next job start at time 3600.
Hole on node 1 core 18. Next job start at time 3600.
Hole on node 1 core 19. Next job start at time 3600.
Hole on node 2 core 15. Next job start at time 3600.
Hole on node 2 core 16. Next job start at time 3600.
Hole on node 2 core 17. Next job start at time 3600.
Hole on node 2 core 18. Next job start at time 3600.
Hole on node 2 core 19. Next job start at time 3600.
Hole on node 3 core 17. Next job start at time 3600.
Hole on node 3 core 18. Next job start at time 3600.
Hole on node 3 core 19. Next job start at time 3600.
Job 10 using file 5 category 0 workload 1 will be computed on node 3 core(s) 16 start at time 0 and is predicted to finish at time 3600.
There are 18/80 available cores.
Scheduling job 11.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 ) 4 ( 3600 4750 7200 ) 5 ( 0 64 3600 0 0 3600 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 11 is 7376 (EAT: 7200 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
Could fit in the hole of node 0.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 0.
Data 3 is on node 0.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 11 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
A: EAT is 7200.
Could fit in the hole of node 1.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 1.
Data 3 is on node 1.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 11 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 1.
A: EAT is 7200.
Could fit in the hole of node 2.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 2.
Data 3 is on node 2.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 11 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 2.
A: EAT is 3600.
Could fit in the hole of node 3.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Interval not empty, but is it on the node at time 3600 ?
Checking 0 / 64 / 3600.
B in hole: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 4: 7200->
Total size of data on node ending before my EAT is: 96.000000 but I return (0.050000*96.000000)/0.100000 = 48.000000.
C in hole: Time to reload evicted files 48.000000.
Score in hole for job 11 is 48 (EAT: 0 + TL 1*0.000000 + TRL 1*48.000000) with node 3.
Backfilled job, using 1 cores, nb of cores in the hole was 3.
Holes after this backfill are:
Hole on node 0 core 15. Next job start at time 3600.
Hole on node 0 core 16. Next job start at time 3600.
Hole on node 0 core 17. Next job start at time 3600.
Hole on node 0 core 18. Next job start at time 3600.
Hole on node 0 core 19. Next job start at time 3600.
Hole on node 1 core 15. Next job start at time 3600.
Hole on node 1 core 16. Next job start at time 3600.
Hole on node 1 core 17. Next job start at time 3600.
Hole on node 1 core 18. Next job start at time 3600.
Hole on node 1 core 19. Next job start at time 3600.
Hole on node 2 core 15. Next job start at time 3600.
Hole on node 2 core 16. Next job start at time 3600.
Hole on node 2 core 17. Next job start at time 3600.
Hole on node 2 core 18. Next job start at time 3600.
Hole on node 2 core 19. Next job start at time 3600.
Hole on node 3 core 18. Next job start at time 3600.
Hole on node 3 core 19. Next job start at time 3600.
Job 11 using file 5 category 0 workload 1 will be computed on node 3 core(s) 17 start at time 0 and is predicted to finish at time 3600.
There are 17/80 available cores.
Scheduling job 12.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 ) 4 ( 3600 4750 7200 ) 5 ( 0 64 3600 0 0 3600 0 0 3600 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 12 is 7376 (EAT: 7200 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
Could fit in the hole of node 0.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 0.
Data 3 is on node 0.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 12 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
A: EAT is 7200.
Could fit in the hole of node 1.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 1.
Data 3 is on node 1.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 12 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 1.
A: EAT is 7200.
Could fit in the hole of node 2.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 2.
Data 3 is on node 2.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 12 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 2.
A: EAT is 3600.
Could fit in the hole of node 3.
Can fit in the hole (end at 3600 but hole closes at 3600). Computing it's score.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Interval not empty, but is it on the node at time 3600 ?
Checking 0 / 64 / 3600.
B in hole: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 4: 7200->
Total size of data on node ending before my EAT is: 96.000000 but I return (0.050000*96.000000)/0.100000 = 48.000000.
C in hole: Time to reload evicted files 48.000000.
Score in hole for job 12 is 48 (EAT: 0 + TL 1*0.000000 + TRL 1*48.000000) with node 3.
Backfilled job, using 1 cores, nb of cores in the hole was 2.
Holes after this backfill are:
Hole on node 0 core 15. Next job start at time 3600.
Hole on node 0 core 16. Next job start at time 3600.
Hole on node 0 core 17. Next job start at time 3600.
Hole on node 0 core 18. Next job start at time 3600.
Hole on node 0 core 19. Next job start at time 3600.
Hole on node 1 core 15. Next job start at time 3600.
Hole on node 1 core 16. Next job start at time 3600.
Hole on node 1 core 17. Next job start at time 3600.
Hole on node 1 core 18. Next job start at time 3600.
Hole on node 1 core 19. Next job start at time 3600.
Hole on node 2 core 15. Next job start at time 3600.
Hole on node 2 core 16. Next job start at time 3600.
Hole on node 2 core 17. Next job start at time 3600.
Hole on node 2 core 18. Next job start at time 3600.
Hole on node 2 core 19. Next job start at time 3600.
Hole on node 3 core 19. Next job start at time 3600.
Job 12 using file 5 category 0 workload 1 will be computed on node 3 core(s) 18 start at time 0 and is predicted to finish at time 3600.
There are 16/80 available cores.
Scheduling job 131.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 ) 4 ( 3600 4750 7200 ) 5 ( 0 64 3600 0 0 3600 0 0 3600 0 0 3600 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 131 is 7376 (EAT: 7200 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
Could fit in the hole of node 0.
Can't fit in the hole because of time.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 131 is 7376 (EAT: 7200 + TL 1*64.000000 + TRL 1*112.000000) with node 1.
Could fit in the hole of node 1.
Can't fit in the hole because of time.
A: EAT is 7200.
Data 1 is on node 2.
Data 3 is on node 2.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 131 is 7376 (EAT: 7200 + TL 1*64.000000 + TRL 1*112.000000) with node 2.
Could fit in the hole of node 2.
Can't fit in the hole because of time.
A: EAT is 3600.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Interval not empty, but is it on the node at time 3600 ?
Checking 0 / 64 / 3600.
B: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 4: 7200->
Total size of data on node ending before my EAT is: 96.000000 but I return (0.050000*96.000000)/0.100000 = 48.000000.
C: Time to reload evicted files 48.000000.
Score for job 131 is 3648 (EAT: 3600 + TL 1*0.000000 + TRL 1*48.000000) with node 3.
Could fit in the hole of node 3.
Can't fit in the hole because of time.
Job 131 using file 5 category 0 workload 1 will be computed on node 3 core(s) 13 start at time 3600 and is predicted to finish at time 13600.
There are 16/80 available cores.
Scheduling job 13.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 ) 4 ( 3600 4750 7200 ) 5 ( 0 64 3600 0 0 3600 0 0 3600 0 0 3600 3600 3600 13600 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 13 is 7376 (EAT: 7200 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
Could fit in the hole of node 0.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 0.
Data 3 is on node 0.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 13 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
A: EAT is 7200.
Could fit in the hole of node 1.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 1.
Data 3 is on node 1.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 13 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 1.
A: EAT is 7200.
Could fit in the hole of node 2.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 2.
Data 3 is on node 2.
B in hole: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C in hole: Time to reload evicted files 112.000000.
Score in hole for job 13 is 176 (EAT: 0 + TL 1*64.000000 + TRL 1*112.000000) with node 2.
A: EAT is 3600.
Could fit in the hole of node 3.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Interval not empty, but is it on the node at time 3600 ?
Checking 0 / 64 / 3600.
B in hole: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 4: 7200->
Total size of data on node ending before my EAT is: 96.000000 but I return (0.050000*96.000000)/0.100000 = 48.000000.
C in hole: Time to reload evicted files 48.000000.
Score in hole for job 13 is 48 (EAT: 0 + TL 1*0.000000 + TRL 1*48.000000) with node 3.
Backfilled job, using 1 cores, nb of cores in the hole was 1.
Holes after this backfill are:
Hole on node 0 core 15. Next job start at time 3600.
Hole on node 0 core 16. Next job start at time 3600.
Hole on node 0 core 17. Next job start at time 3600.
Hole on node 0 core 18. Next job start at time 3600.
Hole on node 0 core 19. Next job start at time 3600.
Hole on node 1 core 15. Next job start at time 3600.
Hole on node 1 core 16. Next job start at time 3600.
Hole on node 1 core 17. Next job start at time 3600.
Hole on node 1 core 18. Next job start at time 3600.
Hole on node 1 core 19. Next job start at time 3600.
Hole on node 2 core 15. Next job start at time 3600.
Hole on node 2 core 16. Next job start at time 3600.
Hole on node 2 core 17. Next job start at time 3600.
Hole on node 2 core 18. Next job start at time 3600.
Hole on node 2 core 19. Next job start at time 3600.
Job 13 using file 5 category 0 workload 1 will be computed on node 3 core(s) 19 start at time 0 and is predicted to finish at time 3500.
There are 15/80 available cores.
Scheduling job 14.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 ) 4 ( 3600 4750 7200 ) 5 ( 0 64 3600 0 0 3600 0 0 3600 0 0 3600 3600 3600 13600 0 0 3500 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 14 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 0.
Could fit in the hole of node 0.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 0.
Data 3 is on node 0.
B in hole: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C in hole: Time to reload evicted files 560.000000.
Score in hole for job 14 is 880 (EAT: 0 + TL 1*320.000000 + TRL 1*560.000000) with node 0.
A: EAT is 7200.
Could fit in the hole of node 1.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 1.
Data 3 is on node 1.
B in hole: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C in hole: Time to reload evicted files 560.000000.
Score in hole for job 14 is 880 (EAT: 0 + TL 1*320.000000 + TRL 1*560.000000) with node 1.
A: EAT is 7200.
Could fit in the hole of node 2.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 2.
Data 3 is on node 2.
B in hole: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C in hole: Time to reload evicted files 560.000000.
Score in hole for job 14 is 880 (EAT: 0 + TL 1*320.000000 + TRL 1*560.000000) with node 2.
A: EAT is 7200.
Need to create a data and intervals for the node 0 data 6.
Backfilled job, using 5 cores, nb of cores in the hole was 5.
Holes after this backfill are:
Hole on node 1 core 15. Next job start at time 3600.
Hole on node 1 core 16. Next job start at time 3600.
Hole on node 1 core 17. Next job start at time 3600.
Hole on node 1 core 18. Next job start at time 3600.
Hole on node 1 core 19. Next job start at time 3600.
Hole on node 2 core 15. Next job start at time 3600.
Hole on node 2 core 16. Next job start at time 3600.
Hole on node 2 core 17. Next job start at time 3600.
Hole on node 2 core 18. Next job start at time 3600.
Hole on node 2 core 19. Next job start at time 3600.
Job 14 using file 6 category 0 workload 1 will be computed on node 0 core(s) 15,16,17,18,19 start at time 0 and is predicted to finish at time 3500.
There are 10/80 available cores.
Scheduling job 15.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 ) 6 ( 0 320 3500 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 ) 4 ( 3600 4750 7200 ) 5 ( 0 64 3600 0 0 3600 0 0 3600 0 0 3600 3600 3600 13600 0 0 3500 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
Interval not empty, but is it on the node at time 7200 ?
Checking 0 / 320 / 3500.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 15 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 0.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 15 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 1.
Could fit in the hole of node 1.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 1.
Data 3 is on node 1.
B in hole: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C in hole: Time to reload evicted files 560.000000.
Score in hole for job 15 is 880 (EAT: 0 + TL 1*320.000000 + TRL 1*560.000000) with node 1.
A: EAT is 7200.
Could fit in the hole of node 2.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 2.
Data 3 is on node 2.
B in hole: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C in hole: Time to reload evicted files 560.000000.
Score in hole for job 15 is 880 (EAT: 0 + TL 1*320.000000 + TRL 1*560.000000) with node 2.
A: EAT is 7200.
Need to create a data and intervals for the node 1 data 6.
Backfilled job, using 5 cores, nb of cores in the hole was 5.
Holes after this backfill are:
Hole on node 2 core 15. Next job start at time 3600.
Hole on node 2 core 16. Next job start at time 3600.
Hole on node 2 core 17. Next job start at time 3600.
Hole on node 2 core 18. Next job start at time 3600.
Hole on node 2 core 19. Next job start at time 3600.
Job 15 using file 6 category 0 workload 1 will be computed on node 1 core(s) 15,16,17,18,19 start at time 0 and is predicted to finish at time 3500.
There are 5/80 available cores.
Scheduling job 16.
Intervals at time 0 are:
Node 0: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 ) 6 ( 0 320 3500 )
Node 1: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 ) 6 ( 0 320 3500 )
Node 2: 1 ( 0 960 3600 ) 3 ( 3600 4880 7200 )
Node 3: 1 ( 0 960 3600 ) 4 ( 3600 4750 7200 ) 5 ( 0 64 3600 0 0 3600 0 0 3600 0 0 3600 3600 3600 13600 0 0 3500 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
Interval not empty, but is it on the node at time 7200 ?
Checking 0 / 320 / 3500.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 16 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 0.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
Interval not empty, but is it on the node at time 7200 ?
Checking 0 / 320 / 3500.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 16 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 1.
A: EAT is 7200.
Data 1 is on node 2.
Data 3 is on node 2.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 16 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 2.
Could fit in the hole of node 2.
Can fit in the hole (end at 3500 but hole closes at 3600). Computing it's score.
Data 1 is on node 2.
Data 3 is on node 2.
B in hole: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C in hole: Time to reload evicted files 560.000000.
Score in hole for job 16 is 880 (EAT: 0 + TL 1*320.000000 + TRL 1*560.000000) with node 2.
A: EAT is 7200.
Need to create a data and intervals for the node 2 data 6.
Backfilled job, using 5 cores, nb of cores in the hole was 5.
Holes after this backfill are:
No holes.
Job 16 using file 6 category 0 workload 1 will be computed on node 2 core(s) 15,16,17,18,19 start at time 0 and is predicted to finish at time 3500.
There are 0/80 available cores.
End of reschedule.
Start of start_jobs at time 0.
Adding data 1 on node 0 at time 0.
For job 1 (delay = 1000): 960 transfer time and 0 waiting for a load time. Overhead is 960
==> Job 1 15 cores start at time 0 on node 0 and will end at time 1960 before walltime: 1 transfer time is 960 data was 1.
Adding data 1 on node 1 at time 0.
For job 2 (delay = 1000): 960 transfer time and 0 waiting for a load time. Overhead is 960
==> Job 2 15 cores start at time 0 on node 1 and will end at time 1960 before walltime: 1 transfer time is 960 data was 1.
Adding data 1 on node 2 at time 0.
For job 3 (delay = 1000): 960 transfer time and 0 waiting for a load time. Overhead is 960
==> Job 3 15 cores start at time 0 on node 2 and will end at time 1960 before walltime: 1 transfer time is 960 data was 1.
Adding data 1 on node 3 at time 0.
For job 4 (delay = 1000): 960 transfer time and 0 waiting for a load time. Overhead is 960
==> Job 4 15 cores start at time 0 on node 3 and will end at time 1960 before walltime: 1 transfer time is 960 data was 1.
Adding data 5 on node 3 at time 0.
For job 9 (delay = 1000): 60 transfer time and 0 waiting for a load time. Overhead is 60
==> Job 9 1 cores start at time 0 on node 3 and will end at time 1060 before walltime: 1 transfer time is 60 data was 5.
Adding data 5 on node 3 at time 0.
For job 10 (delay = 1000): 0 transfer time and 60 waiting for a load time. Overhead is 60
==> Job 10 1 cores start at time 0 on node 3 and will end at time 1060 before walltime: 1 transfer time is 0 data was 5.
Adding data 5 on node 3 at time 0.
For job 11 (delay = 1000): 0 transfer time and 60 waiting for a load time. Overhead is 60
==> Job 11 1 cores start at time 0 on node 3 and will end at time 1060 before walltime: 1 transfer time is 0 data was 5.
Adding data 5 on node 3 at time 0.
For job 12 (delay = 1000): 0 transfer time and 60 waiting for a load time. Overhead is 60
==> Job 12 1 cores start at time 0 on node 3 and will end at time 1060 before walltime: 1 transfer time is 0 data was 5.
Adding data 5 on node 3 at time 0.
For job 13 (delay = 1000): 0 transfer time and 60 waiting for a load time. Overhead is 60
==> Job 13 1 cores start at time 0 on node 3 and will end at time 1060 before walltime: 1 transfer time is 0 data was 5.
Adding data 6 on node 0 at time 0.
For job 14 (delay = 1000): 320 transfer time and 0 waiting for a load time. Overhead is 320
==> Job 14 5 cores start at time 0 on node 0 and will end at time 1320 before walltime: 1 transfer time is 320 data was 6.
Adding data 6 on node 1 at time 0.
For job 15 (delay = 1000): 320 transfer time and 0 waiting for a load time. Overhead is 320
==> Job 15 5 cores start at time 0 on node 1 and will end at time 1320 before walltime: 1 transfer time is 320 data was 6.
Adding data 6 on node 2 at time 0.
For job 16 (delay = 1000): 320 transfer time and 0 waiting for a load time. Overhead is 320
==> Job 16 5 cores start at time 0 on node 2 and will end at time 1320 before walltime: 1 transfer time is 320 data was 6.
Start of end_jobs at time 1060.
==> Job 9 1 cores finished at time 1060 on node 3.
==> Job 10 1 cores finished at time 1060 on node 3.
==> Job 11 1 cores finished at time 1060 on node 3.
==> Job 12 1 cores finished at time 1060 on node 3.
==> Job 13 1 cores finished at time 1060 on node 3.
reset_cores.
Reschedule.
Start fcfs with a score conservative bf at time 1060.
There are 5/80 available cores.
Scheduling job 5.
Intervals at time 1060 are:
Node 0: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 )
Node 1: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 )
Node 2: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 )
Node 3: 1 ( 1060 1060 3600 ) 4 ( ) 5 ( 1060 1060 1060 )
A: EAT is 3600.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 5 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 0.
A: EAT is 3600.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 5 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 5 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 2.
A: EAT is 3600.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 5: 1060->
Add size 6.400000->
Total size of data on node ending before my EAT is: 102.400002 but I return (1.000000*102.400002)/0.100000 = 1024.000000.
C: Time to reload evicted files 1024.000000.
Score for job 5 is 5904 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1024.000000) with node 3.
Need to create a data and intervals for the node 3 data 3.
Il va y avoir un trou sur node 3 core 15.
Il va y avoir un trou sur node 3 core 16.
Il va y avoir un trou sur node 3 core 17.
Il va y avoir un trou sur node 3 core 18.
Il va y avoir un trou sur node 3 core 19.
Job 5 using file 3 category 0 workload 1 will be computed on node 3 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 3600 and is predicted to finish at time 7200.
There are 5/80 available cores.
Scheduling job 6.
Intervals at time 1060 are:
Node 0: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 )
Node 1: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 )
Node 2: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 )
Node 3: 1 ( 1060 1060 3600 ) 4 ( ) 5 ( 1060 1060 1060 ) 3 ( 3600 4880 7200 )
A: EAT is 3600.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 6 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 0.
A: EAT is 3600.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 6 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 6 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 2.
A: EAT is 7200.
Job 6 using file 3 category 0 workload 1 will be computed on node 0 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 3600 and is predicted to finish at time 7200.
There are 5/80 available cores.
Scheduling job 7.
Intervals at time 1060 are:
Node 0: 1 ( 1060 1060 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1060 1060 3500 )
Node 1: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 )
Node 2: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 )
Node 3: 1 ( 1060 1060 3600 ) 4 ( ) 5 ( 1060 1060 1060 ) 3 ( 3600 4880 7200 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Interval not empty, but is it on the node at time 7200 ?
Checking 3600 / 4880 / 7200.
B: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 7 is 8480 (EAT: 7200 + TL 1*0.000000 + TRL 1*1280.000000) with node 0.
A: EAT is 3600.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 7 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 7 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 2.
A: EAT is 7200.
Job 7 using file 3 category 0 workload 1 will be computed on node 1 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 3600 and is predicted to finish at time 7200.
There are 5/80 available cores.
Scheduling job 8.
Intervals at time 1060 are:
Node 0: 1 ( 1060 1060 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1060 1060 3500 )
Node 1: 1 ( 1060 1060 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1060 1060 3500 )
Node 2: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 )
Node 3: 1 ( 1060 1060 3600 ) 4 ( ) 5 ( 1060 1060 1060 ) 3 ( 3600 4880 7200 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 256.000000 but I return (0.900000*256.000000)/0.100000 = 2304.000000.
C: Time to reload evicted files 2304.000000.
Score for job 8 is 10654 (EAT: 7200 + TL 1*1150.000000 + TRL 1*2304.000000) with node 0.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 256.000000 but I return (0.900000*256.000000)/0.100000 = 2304.000000.
C: Time to reload evicted files 2304.000000.
Score for job 8 is 10654 (EAT: 7200 + TL 1*1150.000000 + TRL 1*2304.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.900000*128.000000)/0.100000 = 1152.000000.
C: Time to reload evicted files 1152.000000.
Score for job 8 is 5902 (EAT: 3600 + TL 1*1150.000000 + TRL 1*1152.000000) with node 2.
A: EAT is 7200.
Need to create a data and intervals for the node 2 data 4.
Job 8 using file 4 category 0 workload 1 will be computed on node 2 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12 start at time 3600 and is predicted to finish at time 7200.
There are 5/80 available cores.
Scheduling job 131.
Intervals at time 1060 are:
Node 0: 1 ( 1060 1060 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1060 1060 3500 )
Node 1: 1 ( 1060 1060 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1060 1060 3500 )
Node 2: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 ) 4 ( 3600 4750 7200 )
Node 3: 1 ( 1060 1060 3600 ) 4 ( ) 5 ( 1060 1060 1060 ) 3 ( 3600 4880 7200 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 256.000000 but I return (0.050000*256.000000)/0.100000 = 128.000000.
C: Time to reload evicted files 128.000000.
Score for job 131 is 7392 (EAT: 7200 + TL 1*64.000000 + TRL 1*128.000000) with node 0.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Total size of data on node ending before my EAT is: 256.000000 but I return (0.050000*256.000000)/0.100000 = 128.000000.
C: Time to reload evicted files 128.000000.
Score for job 131 is 7392 (EAT: 7200 + TL 1*64.000000 + TRL 1*128.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 3500->
Add size 32.000000->
Checking tail of the interval of data 4: 7200->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.050000*128.000000)/0.100000 = 64.000000.
C: Time to reload evicted files 64.000000.
Score for job 131 is 3728 (EAT: 3600 + TL 1*64.000000 + TRL 1*64.000000) with node 2.
A: EAT is 7200.
Could fit in the hole of node 3.
Can't fit in the hole because of time.
Need to create a data and intervals for the node 2 data 5.
Job 131 using file 5 category 0 workload 1 will be computed on node 2 core(s) 13 start at time 3600 and is predicted to finish at time 13600.
There are 5/80 available cores.
Scheduling job 17.
Intervals at time 1060 are:
Node 0: 1 ( 1060 1060 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1060 1060 3500 )
Node 1: 1 ( 1060 1060 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1060 1060 3500 )
Node 2: 1 ( 1060 1060 3600 ) 3 ( ) 6 ( 1060 1060 3500 ) 4 ( 3600 4750 7200 ) 5 ( 3600 3664 13600 )
Node 3: 1 ( 1060 1060 3600 ) 4 ( ) 5 ( 1060 1060 1060 ) 3 ( 3600 4880 7200 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
Interval not empty, but is it on the node at time 7200 ?
Checking 1060 / 1060 / 3500.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 17 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 0.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
Interval not empty, but is it on the node at time 7200 ?
Checking 1060 / 1060 / 3500.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 17 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 1.
A: EAT is 7200.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Interval not empty, but is it on the node at time 7200 ?
Checking 1060 / 1060 / 3500.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 4: 7200->
Add size 115.000000->
Checking tail of the interval of data 5: 13600->
Total size of data on node ending before my EAT is: 211.000000 but I return (0.250000*211.000000)/0.100000 = 527.500000.
C: Time to reload evicted files 527.500000.
Score for job 17 is 8047 (EAT: 7200 + TL 1*320.000000 + TRL 1*527.500000) with node 2.
A: EAT is 7200.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 5: 1060->
Add size 6.400000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 230.399994 but I return (0.250000*230.399994)/0.100000 = 576.000000.
C: Time to reload evicted files 576.000000.
Score for job 17 is 8096 (EAT: 7200 + TL 1*320.000000 + TRL 1*576.000000) with node 3.
Could fit in the hole of node 3.
Can't fit in the hole because of time.
Job 17 using file 6 category 0 workload 1 will be computed on node 2 core(s) 14,0,1,2,3 start at time 7200 and is predicted to finish at time 10700.
End of reschedule.
Start of end_jobs at time 1320.
==> Job 14 5 cores finished at time 1320 on node 0.
==> Job 15 5 cores finished at time 1320 on node 1.
==> Job 16 5 cores finished at time 1320 on node 2.
reset_cores.
Reschedule.
Start fcfs with a score conservative bf at time 1320.
There are 20/80 available cores.
Scheduling job 5.
Intervals at time 1320 are:
Node 0: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 )
Node 1: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 )
Node 2: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 ) 4 ( ) 5 ( )
Node 3: 1 ( 1320 1320 3600 ) 4 ( ) 5 ( ) 3 ( )
A: EAT is 3600.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 5 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 0.
A: EAT is 3600.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 5 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 5 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 2.
A: EAT is 3600.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 5 is 5840 (EAT: 3600 + TL 1*1280.000000 + TRL 1*960.000000) with node 3.
Il va y avoir un trou sur node 3 core 15.
Il va y avoir un trou sur node 3 core 16.
Il va y avoir un trou sur node 3 core 17.
Il va y avoir un trou sur node 3 core 18.
Il va y avoir un trou sur node 3 core 19.
Job 5 using file 3 category 0 workload 1 will be computed on node 3 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 3600 and is predicted to finish at time 7200.
There are 20/80 available cores.
Scheduling job 6.
Intervals at time 1320 are:
Node 0: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 )
Node 1: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 )
Node 2: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 ) 4 ( ) 5 ( )
Node 3: 1 ( 1320 1320 3600 ) 4 ( ) 5 ( ) 3 ( 3600 4880 7200 )
A: EAT is 3600.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 6 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 0.
A: EAT is 3600.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 6 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 6 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 2.
A: EAT is 7200.
Il va y avoir un trou sur node 0 core 15.
Il va y avoir un trou sur node 0 core 16.
Il va y avoir un trou sur node 0 core 17.
Il va y avoir un trou sur node 0 core 18.
Il va y avoir un trou sur node 0 core 19.
Job 6 using file 3 category 0 workload 1 will be computed on node 0 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 3600 and is predicted to finish at time 7200.
There are 20/80 available cores.
Scheduling job 7.
Intervals at time 1320 are:
Node 0: 1 ( 1320 1320 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1320 1320 1320 )
Node 1: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 )
Node 2: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 ) 4 ( ) 5 ( )
Node 3: 1 ( 1320 1320 3600 ) 4 ( ) 5 ( ) 3 ( 3600 4880 7200 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Interval not empty, but is it on the node at time 7200 ?
Checking 3600 / 4880 / 7200.
B: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 7 is 8480 (EAT: 7200 + TL 1*0.000000 + TRL 1*1280.000000) with node 0.
A: EAT is 3600.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 7 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (1.000000*128.000000)/0.100000 = 1280.000000.
C: Time to reload evicted files 1280.000000.
Score for job 7 is 6160 (EAT: 3600 + TL 1*1280.000000 + TRL 1*1280.000000) with node 2.
A: EAT is 7200.
Il va y avoir un trou sur node 1 core 15.
Il va y avoir un trou sur node 1 core 16.
Il va y avoir un trou sur node 1 core 17.
Il va y avoir un trou sur node 1 core 18.
Il va y avoir un trou sur node 1 core 19.
Job 7 using file 3 category 0 workload 1 will be computed on node 1 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14 start at time 3600 and is predicted to finish at time 7200.
There are 20/80 available cores.
Scheduling job 8.
Intervals at time 1320 are:
Node 0: 1 ( 1320 1320 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1320 1320 1320 )
Node 1: 1 ( 1320 1320 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1320 1320 1320 )
Node 2: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 ) 4 ( ) 5 ( )
Node 3: 1 ( 1320 1320 3600 ) 4 ( ) 5 ( ) 3 ( 3600 4880 7200 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 256.000000 but I return (0.900000*256.000000)/0.100000 = 2304.000000.
C: Time to reload evicted files 2304.000000.
Score for job 8 is 10654 (EAT: 7200 + TL 1*1150.000000 + TRL 1*2304.000000) with node 0.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 256.000000 but I return (0.900000*256.000000)/0.100000 = 2304.000000.
C: Time to reload evicted files 2304.000000.
Score for job 8 is 10654 (EAT: 7200 + TL 1*1150.000000 + TRL 1*2304.000000) with node 1.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.900000*128.000000)/0.100000 = 1152.000000.
C: Time to reload evicted files 1152.000000.
Score for job 8 is 5902 (EAT: 3600 + TL 1*1150.000000 + TRL 1*1152.000000) with node 2.
A: EAT is 7200.
Il va y avoir un trou sur node 2 core 15.
Il va y avoir un trou sur node 2 core 16.
Il va y avoir un trou sur node 2 core 17.
Il va y avoir un trou sur node 2 core 18.
Il va y avoir un trou sur node 2 core 19.
Job 8 using file 4 category 0 workload 1 will be computed on node 2 core(s) 15,16,17,18,19,0,1,2,3,4,5,6,7,8,9,10,11,12 start at time 3600 and is predicted to finish at time 7200.
There are 20/80 available cores.
Scheduling job 131.
Intervals at time 1320 are:
Node 0: 1 ( 1320 1320 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1320 1320 1320 )
Node 1: 1 ( 1320 1320 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1320 1320 1320 )
Node 2: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 ) 4 ( 3600 4750 7200 ) 5 ( )
Node 3: 1 ( 1320 1320 3600 ) 4 ( ) 5 ( ) 3 ( 3600 4880 7200 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 256.000000 but I return (0.050000*256.000000)/0.100000 = 128.000000.
C: Time to reload evicted files 128.000000.
Score for job 131 is 7392 (EAT: 7200 + TL 1*64.000000 + TRL 1*128.000000) with node 0.
Could fit in the hole of node 0.
Can't fit in the hole because of time.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Total size of data on node ending before my EAT is: 256.000000 but I return (0.050000*256.000000)/0.100000 = 128.000000.
C: Time to reload evicted files 128.000000.
Score for job 131 is 7392 (EAT: 7200 + TL 1*64.000000 + TRL 1*128.000000) with node 1.
Could fit in the hole of node 1.
Can't fit in the hole because of time.
A: EAT is 3600.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 6: 1320->
Add size 32.000000->
Checking tail of the interval of data 4: 7200->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.050000*128.000000)/0.100000 = 64.000000.
C: Time to reload evicted files 64.000000.
Score for job 131 is 3728 (EAT: 3600 + TL 1*64.000000 + TRL 1*64.000000) with node 2.
Could fit in the hole of node 2.
Can't fit in the hole because of time.
A: EAT is 7200.
Could fit in the hole of node 3.
Can't fit in the hole because of time.
Job 131 using file 5 category 0 workload 1 will be computed on node 2 core(s) 13 start at time 3600 and is predicted to finish at time 13600.
There are 20/80 available cores.
Scheduling job 17.
Intervals at time 1320 are:
Node 0: 1 ( 1320 1320 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1320 1320 1320 )
Node 1: 1 ( 1320 1320 3600 ) 3 ( 3600 4880 7200 ) 6 ( 1320 1320 1320 )
Node 2: 1 ( 1320 1320 3600 ) 3 ( ) 6 ( 1320 1320 1320 ) 4 ( 3600 4750 7200 ) 5 ( 3600 3664 13600 )
Node 3: 1 ( 1320 1320 3600 ) 4 ( ) 5 ( ) 3 ( 3600 4880 7200 )
A: EAT is 7200.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
Interval not empty, but is it on the node at time 7200 ?
Checking 1320 / 1320 / 1320.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 17 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 0.
Could fit in the hole of node 0.
Can't fit in the hole because of time.
A: EAT is 7200.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
Interval not empty, but is it on the node at time 7200 ?
Checking 1320 / 1320 / 1320.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 17 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 1.
Could fit in the hole of node 1.
Can't fit in the hole because of time.
A: EAT is 7200.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Interval not empty, but is it on the node at time 7200 ?
Checking 1320 / 1320 / 1320.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 4: 7200->
Add size 115.000000->
Checking tail of the interval of data 5: 13600->
Total size of data on node ending before my EAT is: 211.000000 but I return (0.250000*211.000000)/0.100000 = 527.500000.
C: Time to reload evicted files 527.500000.
Score for job 17 is 8047 (EAT: 7200 + TL 1*320.000000 + TRL 1*527.500000) with node 2.
Could fit in the hole of node 2.
Can't fit in the hole because of time.
A: EAT is 7200.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 3600->
Add size 96.000000->
Checking tail of the interval of data 3: 7200->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 17 is 8080 (EAT: 7200 + TL 1*320.000000 + TRL 1*560.000000) with node 3.
Could fit in the hole of node 3.
Can't fit in the hole because of time.
Job 17 using file 6 category 0 workload 1 will be computed on node 2 core(s) 14,0,1,2,3 start at time 7200 and is predicted to finish at time 10700.
End of reschedule.
Start of end_jobs at time 1960.
==> Job 1 15 cores finished at time 1960 on node 0.
==> Job 2 15 cores finished at time 1960 on node 1.
==> Job 3 15 cores finished at time 1960 on node 2.
==> Job 4 15 cores finished at time 1960 on node 3.
reset_cores.
Reschedule.
Start fcfs with a score conservative bf at time 1960.
There are 80/80 available cores.
Scheduling job 5.
Intervals at time 1960 are:
Node 0: 1 ( 1960 1960 1960 ) 3 ( ) 6 ( )
Node 1: 1 ( 1960 1960 1960 ) 3 ( ) 6 ( )
Node 2: 1 ( 1960 1960 1960 ) 3 ( ) 6 ( ) 4 ( ) 5 ( )
Node 3: 1 ( 1960 1960 1960 ) 4 ( ) 5 ( ) 3 ( )
A: EAT is 1960.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 5 is 4200 (EAT: 1960 + TL 1*1280.000000 + TRL 1*960.000000) with node 0.
A: EAT is 1960.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 5 is 4200 (EAT: 1960 + TL 1*1280.000000 + TRL 1*960.000000) with node 1.
A: EAT is 1960.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 5 is 4200 (EAT: 1960 + TL 1*1280.000000 + TRL 1*960.000000) with node 2.
A: EAT is 1960.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 5 is 4200 (EAT: 1960 + TL 1*1280.000000 + TRL 1*960.000000) with node 3.
Job 5 using file 3 category 0 workload 1 will be computed on node 0 core(s) 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19 start at time 1960 and is predicted to finish at time 5560.
There are 60/80 available cores.
Scheduling job 6.
Intervals at time 1960 are:
Node 0: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( )
Node 1: 1 ( 1960 1960 1960 ) 3 ( ) 6 ( )
Node 2: 1 ( 1960 1960 1960 ) 3 ( ) 6 ( ) 4 ( ) 5 ( )
Node 3: 1 ( 1960 1960 1960 ) 4 ( ) 5 ( ) 3 ( )
A: EAT is 5560.
Data 1 is on node 0.
Data 3 is on node 0.
Interval not empty, but is it on the node at time 5560 ?
Checking 1960 / 3240 / 5560.
B: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 6 is 6520 (EAT: 5560 + TL 1*0.000000 + TRL 1*960.000000) with node 0.
A: EAT is 1960.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 6 is 4200 (EAT: 1960 + TL 1*1280.000000 + TRL 1*960.000000) with node 1.
A: EAT is 1960.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 6 is 4200 (EAT: 1960 + TL 1*1280.000000 + TRL 1*960.000000) with node 2.
A: EAT is 1960.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 6 is 4200 (EAT: 1960 + TL 1*1280.000000 + TRL 1*960.000000) with node 3.
Job 6 using file 3 category 0 workload 1 will be computed on node 1 core(s) 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19 start at time 1960 and is predicted to finish at time 5560.
There are 40/80 available cores.
Scheduling job 7.
Intervals at time 1960 are:
Node 0: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( )
Node 1: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( )
Node 2: 1 ( 1960 1960 1960 ) 3 ( ) 6 ( ) 4 ( ) 5 ( )
Node 3: 1 ( 1960 1960 1960 ) 4 ( ) 5 ( ) 3 ( )
A: EAT is 5560.
Data 1 is on node 0.
Data 3 is on node 0.
Interval not empty, but is it on the node at time 5560 ?
Checking 1960 / 3240 / 5560.
B: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 7 is 6520 (EAT: 5560 + TL 1*0.000000 + TRL 1*960.000000) with node 0.
A: EAT is 5560.
Data 1 is on node 1.
Data 3 is on node 1.
Interval not empty, but is it on the node at time 5560 ?
Checking 1960 / 3240 / 5560.
B: Time to load file: 0.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 7 is 6520 (EAT: 5560 + TL 1*0.000000 + TRL 1*960.000000) with node 1.
A: EAT is 1960.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 7 is 4200 (EAT: 1960 + TL 1*1280.000000 + TRL 1*960.000000) with node 2.
A: EAT is 1960.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
B: Time to load file: 1280.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (1.000000*96.000000)/0.100000 = 960.000000.
C: Time to reload evicted files 960.000000.
Score for job 7 is 4200 (EAT: 1960 + TL 1*1280.000000 + TRL 1*960.000000) with node 3.
Job 7 using file 3 category 0 workload 1 will be computed on node 2 core(s) 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19 start at time 1960 and is predicted to finish at time 5560.
There are 20/80 available cores.
Scheduling job 8.
Intervals at time 1960 are:
Node 0: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( )
Node 1: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( )
Node 2: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( ) 4 ( ) 5 ( )
Node 3: 1 ( 1960 1960 1960 ) 4 ( ) 5 ( ) 3 ( )
A: EAT is 5560.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.900000*224.000000)/0.100000 = 2015.999878.
C: Time to reload evicted files 2015.999878.
Score for job 8 is 8726 (EAT: 5560 + TL 1*1150.000000 + TRL 1*2015.999878) with node 0.
A: EAT is 5560.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.900000*224.000000)/0.100000 = 2015.999878.
C: Time to reload evicted files 2015.999878.
Score for job 8 is 8726 (EAT: 5560 + TL 1*1150.000000 + TRL 1*2015.999878) with node 1.
A: EAT is 5560.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.900000*224.000000)/0.100000 = 2015.999878.
C: Time to reload evicted files 2015.999878.
Score for job 8 is 8726 (EAT: 5560 + TL 1*1150.000000 + TRL 1*2015.999878) with node 2.
A: EAT is 1960.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
B: Time to load file: 1150.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Total size of data on node ending before my EAT is: 96.000000 but I return (0.900000*96.000000)/0.100000 = 863.999939.
C: Time to reload evicted files 863.999939.
Score for job 8 is 3974 (EAT: 1960 + TL 1*1150.000000 + TRL 1*863.999939) with node 3.
Job 8 using file 4 category 0 workload 1 will be computed on node 3 core(s) 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17 start at time 1960 and is predicted to finish at time 5560.
There are 2/80 available cores.
Scheduling job 131.
Intervals at time 1960 are:
Node 0: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( )
Node 1: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( )
Node 2: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( ) 4 ( ) 5 ( )
Node 3: 1 ( 1960 1960 1960 ) 4 ( 1960 3110 5560 ) 5 ( ) 3 ( )
A: EAT is 5560.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 131 is 5736 (EAT: 5560 + TL 1*64.000000 + TRL 1*112.000000) with node 0.
A: EAT is 5560.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 131 is 5736 (EAT: 5560 + TL 1*64.000000 + TRL 1*112.000000) with node 1.
A: EAT is 5560.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.050000*224.000000)/0.100000 = 112.000000.
C: Time to reload evicted files 112.000000.
Score for job 131 is 5736 (EAT: 5560 + TL 1*64.000000 + TRL 1*112.000000) with node 2.
A: EAT is 1960.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
B: Time to load file: 64.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 4: 5560->
Total size of data on node ending before my EAT is: 96.000000 but I return (0.050000*96.000000)/0.100000 = 48.000000.
C: Time to reload evicted files 48.000000.
Score for job 131 is 2072 (EAT: 1960 + TL 1*64.000000 + TRL 1*48.000000) with node 3.
Job 131 using file 5 category 0 workload 1 will be computed on node 3 core(s) 18 start at time 1960 and is predicted to finish at time 11960.
There are 1/80 available cores.
Scheduling job 17.
Intervals at time 1960 are:
Node 0: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( )
Node 1: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( )
Node 2: 1 ( 1960 1960 1960 ) 3 ( 1960 3240 5560 ) 6 ( ) 4 ( ) 5 ( )
Node 3: 1 ( 1960 1960 1960 ) 4 ( 1960 3110 5560 ) 5 ( 1960 2024 11960 ) 3 ( )
A: EAT is 5560.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 17 is 6440 (EAT: 5560 + TL 1*320.000000 + TRL 1*560.000000) with node 0.
A: EAT is 5560.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 17 is 6440 (EAT: 5560 + TL 1*320.000000 + TRL 1*560.000000) with node 1.
A: EAT is 5560.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 224.000000 but I return (0.250000*224.000000)/0.100000 = 560.000000.
C: Time to reload evicted files 560.000000.
Score for job 17 is 6440 (EAT: 5560 + TL 1*320.000000 + TRL 1*560.000000) with node 2.
A: EAT is 5560.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 1: 1960->
Add size 96.000000->
Checking tail of the interval of data 4: 5560->
Add size 115.000000->
Checking tail of the interval of data 5: 11960->
Total size of data on node ending before my EAT is: 211.000000 but I return (0.250000*211.000000)/0.100000 = 527.500000.
C: Time to reload evicted files 527.500000.
Score for job 17 is 6407 (EAT: 5560 + TL 1*320.000000 + TRL 1*527.500000) with node 3.
Need to create a data and intervals for the node 3 data 6.
Il va y avoir un trou sur node 3 core 19.
Job 17 using file 6 category 0 workload 1 will be computed on node 3 core(s) 19,0,1,2,3 start at time 5560 and is predicted to finish at time 9060.
End of reschedule.
Start of start_jobs at time 1960.
Adding data 3 on node 0 at time 1960.
For job 5 (delay = 1000): 1280 transfer time and 0 waiting for a load time. Overhead is 1280
==> Job 5 20 cores start at time 1960 on node 0 and will end at time 4240 before walltime: 1 transfer time is 1280 data was 3.
Adding data 3 on node 1 at time 1960.
For job 6 (delay = 1000): 1280 transfer time and 0 waiting for a load time. Overhead is 1280
==> Job 6 20 cores start at time 1960 on node 1 and will end at time 4240 before walltime: 1 transfer time is 1280 data was 3.
Adding data 3 on node 2 at time 1960.
For job 7 (delay = 1000): 1280 transfer time and 0 waiting for a load time. Overhead is 1280
==> Job 7 20 cores start at time 1960 on node 2 and will end at time 4240 before walltime: 1 transfer time is 1280 data was 3.
Adding data 4 on node 3 at time 1960.
For job 8 (delay = 1000): 1150 transfer time and 0 waiting for a load time. Overhead is 1150
==> Job 8 18 cores start at time 1960 on node 3 and will end at time 4110 before walltime: 1 transfer time is 1150 data was 4.
Adding data 5 on node 3 at time 1960.
For job 131 (delay = 1000): 60 transfer time and 0 waiting for a load time. Overhead is 60
==> Job 131 1 cores start at time 1960 on node 3 and will end at time 3020 before walltime: 1 transfer time is 60 data was 5.
Start of end_jobs at time 3020.
==> Job 131 1 cores finished at time 3020 on node 3.
reset_cores.
Reschedule.
Start fcfs with a score conservative bf at time 3020.
There are 2/80 available cores.
Scheduling job 17.
Intervals at time 3020 are:
Node 0: 1 ( ) 3 ( 3020 3240 5560 ) 6 ( )
Node 1: 1 ( ) 3 ( 3020 3240 5560 ) 6 ( )
Node 2: 1 ( ) 3 ( 3020 3240 5560 ) 6 ( ) 4 ( ) 5 ( )
Node 3: 1 ( ) 4 ( 3020 3110 5560 ) 5 ( 3020 3020 3020 ) 3 ( ) 6 ( )
A: EAT is 5560.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.250000*128.000000)/0.100000 = 320.000000.
C: Time to reload evicted files 320.000000.
Score for job 17 is 6200 (EAT: 5560 + TL 1*320.000000 + TRL 1*320.000000) with node 0.
A: EAT is 5560.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.250000*128.000000)/0.100000 = 320.000000.
C: Time to reload evicted files 320.000000.
Score for job 17 is 6200 (EAT: 5560 + TL 1*320.000000 + TRL 1*320.000000) with node 1.
A: EAT is 5560.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.250000*128.000000)/0.100000 = 320.000000.
C: Time to reload evicted files 320.000000.
Score for job 17 is 6200 (EAT: 5560 + TL 1*320.000000 + TRL 1*320.000000) with node 2.
A: EAT is 5560.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
Data 6 is on node 3.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 4: 5560->
Add size 115.000000->
Checking tail of the interval of data 5: 3020->
Add size 6.400000->
Total size of data on node ending before my EAT is: 121.400002 but I return (0.250000*121.400002)/0.100000 = 303.500000.
C: Time to reload evicted files 303.500000.
Score for job 17 is 6183 (EAT: 5560 + TL 1*320.000000 + TRL 1*303.500000) with node 3.
Il va y avoir un trou sur node 3 core 18.
Il va y avoir un trou sur node 3 core 19.
Job 17 using file 6 category 0 workload 1 will be computed on node 3 core(s) 18,19,0,1,2 start at time 5560 and is predicted to finish at time 9060.
End of reschedule.
Start of end_jobs at time 4110.
==> Job 8 18 cores finished at time 4110 on node 3.
reset_cores.
Reschedule.
Start fcfs with a score conservative bf at time 4110.
There are 20/80 available cores.
Scheduling job 17.
Intervals at time 4110 are:
Node 0: 1 ( ) 3 ( 4110 4110 5560 ) 6 ( )
Node 1: 1 ( ) 3 ( 4110 4110 5560 ) 6 ( )
Node 2: 1 ( ) 3 ( 4110 4110 5560 ) 6 ( ) 4 ( ) 5 ( )
Node 3: 1 ( ) 4 ( 4110 4110 4110 ) 5 ( ) 3 ( ) 6 ( )
A: EAT is 5560.
Data 1 is on node 0.
Data 3 is on node 0.
Data 6 is on node 0.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.250000*128.000000)/0.100000 = 320.000000.
C: Time to reload evicted files 320.000000.
Score for job 17 is 6200 (EAT: 5560 + TL 1*320.000000 + TRL 1*320.000000) with node 0.
A: EAT is 5560.
Data 1 is on node 1.
Data 3 is on node 1.
Data 6 is on node 1.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.250000*128.000000)/0.100000 = 320.000000.
C: Time to reload evicted files 320.000000.
Score for job 17 is 6200 (EAT: 5560 + TL 1*320.000000 + TRL 1*320.000000) with node 1.
A: EAT is 5560.
Data 1 is on node 2.
Data 3 is on node 2.
Data 6 is on node 2.
Data 4 is on node 2.
Data 5 is on node 2.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 3: 5560->
Add size 128.000000->
Total size of data on node ending before my EAT is: 128.000000 but I return (0.250000*128.000000)/0.100000 = 320.000000.
C: Time to reload evicted files 320.000000.
Score for job 17 is 6200 (EAT: 5560 + TL 1*320.000000 + TRL 1*320.000000) with node 2.
A: EAT is 4110.
Data 1 is on node 3.
Data 4 is on node 3.
Data 5 is on node 3.
Data 3 is on node 3.
Data 6 is on node 3.
B: Time to load file: 320.000000. Is being loaded? 0.
Checking tail of the interval of data 4: 4110->
Add size 115.000000->
Total size of data on node ending before my EAT is: 115.000000 but I return (0.250000*115.000000)/0.100000 = 287.500000.
C: Time to reload evicted files 287.500000.
Score for job 17 is 4717 (EAT: 4110 + TL 1*320.000000 + TRL 1*287.500000) with node 3.
Job 17 using file 6 category 0 workload 1 will be computed on node 3 core(s) 0,1,2,3,4 start at time 4110 and is predicted to finish at time 7610.
End of reschedule.
Start of start_jobs at time 4110.
Adding data 6 on node 3 at time 4110.
For job 17 (delay = 1000): 320 transfer time and 0 waiting for a load time. Overhead is 320
==> Job 17 5 cores start at time 4110 on node 3 and will end at time 5430 before walltime: 1 transfer time is 320 data was 6.
Computing and writing results...
Scheduler: Fcfs_with_a_score_conservativebf_x1_x1_x0_x0, Number of jobs evaluated: 18, Max queue time: 4110.000000, Mean queue time: 772.777771, Total queue time: 13910.000000, Max flow: 5430.000000, Mean flow: 2354.444336, Total flow: 42380.000000, Transfer time: 10230.000000, Makespan: 5430.000000, Core time: 325860.000000, Waiting for a load time: 240.000000, Transfer + waiting time: 10470.000000, Mean flow stretch: 1.467987, Mean bounded flow stretch: 1.467987, Max flow stretch: 4.113636, Max bounded flow stretch: 4.113636, Nb of upgraded jobs: 0, Nb large queue times (>25000): 0, Mean flow stretch 128 256 1024: 1.467987 0.000000 0.000000, Mean flow stretch with a minimum 128 256 1024: 1.467987 0.000000 0.000000

